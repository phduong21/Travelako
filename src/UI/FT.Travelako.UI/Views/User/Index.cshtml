@model FT.Travelako.UI.Models.Users.ViewModel.SignUpVM

@{
    ViewBag.Title = "Sign Up";
}

<h2>Sign Up</h2>

<style>
    .form-container {
        max-width: 800px;
        margin: 0 auto;
        display: flex;
        justify-content: space-between;
        margin-bottom: 20px; 
    }

    .form-column {
        width: 48%; 
    }

    .form-group {
        display: flex;
        flex-direction: column;
        margin-bottom: 20px;
    }

        .form-group label {
            margin-bottom: 5px;
        }

        .form-group input,
        .form-group select {
            width: 100%;
            padding: 8px;
            box-sizing: border-box;
            margin-bottom: 10px; 
        }

        .form-group::after {
            content: "";
            display: table;
            clear: both;
        }

    .btn-container {
        text-align: center;
    }

    .btn-signup {
        width: 150px; 
    }
</style>



@using (Html.BeginForm("Register", "User", FormMethod.Post, new { @class = "form-container" }))
{
    <div class="form-column">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="form-group">
            @Html.LabelFor(model => model.Username)
            @Html.TextBoxFor(model => model.Username, new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.Username, "", new { @class = "text-danger" })
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Email)
            @Html.TextBoxFor(model => model.Email, new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Password)
            @Html.PasswordFor(model => model.Password, new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ConfirmPassword)
            @Html.PasswordFor(model => model.ConfirmPassword, new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.ConfirmPassword, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-column">
        <div class="form-group">
            @Html.LabelFor(model => model.FirstName)
            @Html.TextBoxFor(model => model.FirstName, new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.LastName)
            @Html.TextBoxFor(model => model.LastName, new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Address)
            @Html.TextBoxFor(model => model.Address, new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Role)
            @Html.DropDownListFor(model => model.Role, new SelectList(new[] { "Administrator", "Business", "User" }), "Select Role", new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.Role, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="btn-container">
        <button type="submit" class="btn btn-primary btn-signup">Sign Up</button>
    </div>
}

<script>
    $(document).ready(function () {
        $("#roleDropdown").on('change', function () {
            var selectedValue = $(this).val();
            if (selectedValue === "") {
                $(this).find('option[value=""]').remove();
            }
        });
    });
</script>

@section scripts {
    <script src="https://code.jquery.com/jquery-3.6.4.min.js"></script>
}

